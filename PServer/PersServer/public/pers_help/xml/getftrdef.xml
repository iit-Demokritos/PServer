<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<root>
    <description>
        Add custom community on PServer
    </description>
    <rt>
        XML/JSON
    </rt>
    <URL>
        1.0/community/:ClientCredentials/cluster/custom/users.xml
    </URL>
    <URL>
        1.0/community/:ClientCredentials/cluster/custom/users.json
    </URL>
    <parameter>
        <name>
            :ClientCredentials
        </name>
        <status>
            required
        </status>
        <paramdesc>
            The client credentials
        </paramdesc>
        <example>
            name|pass
        </example>
    </parameter> 
    <parameter>
        <name>
            name
        </name>
        <status>
            required
        </status>
        <paramdesc>
            The community name
        </paramdesc>
        <example>
            name=testcommunity
        </example>
    </parameter> 
    <parameter>
        <name>
            users
        </name>
        <status>
            required
        </status>
        <paramdesc>
            List with users who belongs
        </paramdesc>
        <example>
            users=[“user1”,”user2”]
        </example>
    </parameter> 
    <ExURL>
       
    </ExURL>
    <ExResponse>

    </ExResponse>
</root>








<html>

    <head>
        <meta http-equiv="Content-Language" content="en-us">
        <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
        <title>-addftr template</title>
    </head>

    <body bgcolor="#eee">

        <pre>-getftrdef or getdef
template: pers?clnt=&lt;name|pass&gt;&amp;com=getftrdef&amp;ftr=&lt;ftr_pattern&gt;
          Order of query params is not important.
pattern : * | name[.*], where name is a path expression
descript: selects all features matching the feature
          pattern and formats an XML answer with their
          names and def values. If no feature in DB
          matches the pattern, the result will not have
          any row elements (200 OK will still be returned).
          The results are sorted according to ascending
          feature name (a-&gt;z, 1-&gt;10).
example : pers?clnt=name|pass&amp;com=getftrdef&amp;ftr=lang.*
returns : 200 OK, 401 (fail, request error), 501 (fail, server error)
200 OK  : in this case the response body is as follows
          &lt;?xml version=&quot;1.0&quot;?&gt;
          &lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;/resp_xsl/up_features.xsl&quot;?&gt;
          &lt;result&gt;
              &lt;row&gt;&lt;ftr&gt;feature&lt;/ftr&gt;&lt;defval&gt;default value&lt;/defval&gt;&lt;/row&gt;
              ...
          &lt;/result&gt;
comments: the reference to the xsl file allows to view results
          in a web browser. In case the response body is handled
          directly by an application and not by a browser, this
          reference to xsl can be ignored.</pre>

    </body>

</html>
